<?php
//
use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\Entity\Webform;
use Drupal\webform\WebformSubmissionInterface;
use Drupal\mat_webform\Service\CentralRegistryApi;

/**
 * Implements hook_ENTITY_insert().
 *
 * @param \Drupal\webform\WebformSubmissionInterface $submission
 *
 * @throws \Exception
 */
function mat_webform_webform_submission_insert(WebformSubmissionInterface $submission) {

  // Central registry API submission
  if ($submission->bundle() === 'dla_registry_create_registrant') {
    // Execute API request: save registrant
     /** @var CentralRegistryApi $centralApi */
    $centralApi = \Drupal::service('mat_webform.central_registry_api');

    $response = $centralApi->execute('registrants', $submission->getData());

    if ($response->getStatusCode() === 201 && $response->getReasonPhrase() === 'Created') {
      // @todo: request was succesful - redirect user to some summary page?
      dump($response->getReasonPhrase());
    }
    else {
      // @todo: some error handling needed here.
      print "Request failed";
    }
    // TODO: Remove when solved redirection.
    dump($submission->getData());
    exit;
  }
}

function mat_webform_webform_insert(Webform $webform) {
  $access_rules = $webform->getAccessRules();
  $access_rules['administer']['roles']['0'] = 'editor';
  $webform->setAccessRules($access_rules);
}

function mat_webform_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ((isset($form['#webform_id']) && $form['#webform_id'] === 'paypal_donation_form') || $form_id === 'webform_submission_paypal_donation_form_add_form') {
    $form['#attached']['library'][] = 'mat_webform/paypal';
  }
}
