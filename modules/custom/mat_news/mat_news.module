<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function mat_news_form_alter(&$form, $form_state, $form_id) {
  /*
   * News Landing exposed filters. Generate year numbers & categories (only those that have results).
   */
  if(isset($form['#id']) && $form['#id'] == 'views-exposed-form-news-landing-page-1') {
    $form['field_news_category_target_id']['#type'] = 'radios';
    // Get years.
    $nids = \Drupal::entityQuery('node')->condition('type','news_article')->execute();
    $nodes =  \Drupal\node\Entity\Node::loadMultiple($nids);
    $years = array();
    // Get categories (hides filters with no results).
    $options = ['All' => t('Show all')];

    // Grab every news node's category and created time.
    foreach ($nodes as $k => $v) {
      //year
      $get_year = date('Y', $v->getCreatedTime());
      $years[$get_year] = $get_year;
      //category
      foreach ($v->field_news_category as $category) {
        $entity = $category->entity;
        $options[$entity->getWeight()] = $entity->id();
      }
    }

    // Remove duplicates.
    $years_clean = array_unique($years);
    $options = array_unique($options);

    // Sort by weight and replace.
    ksort($options);
    $options_final = [];

    foreach ($options as $weight => $id) {
      if (gettype($id) != 'string') {
        $options_final['All'] = t('Show all');
      } else {
        $options_final[$id] = Term::load($id)->getName();
      }

    }

    // Sort by year (descending).
    krsort($years_clean);
    $sorted_array = array();
    foreach ($years_clean as $key => $val) {
      $sorted_array[$key] = $val;
    }

    // Return values.
    $cur_year = date('Y');
    $form['year'] = [
      '#title' => t('Archive'),
      '#type' => 'radios',
      '#options' => $sorted_array,
      '#size' => NULL,
      '#default_value' => $cur_year,
    ];
    // Set the exposed form's new (filtered) options.
    $form['field_news_category_target_id']['#options'] = $options_final;
  }
}

function mat_news_views_query_alter(\Drupal\views\ViewExecutable $view, Drupal\views\Plugin\views\query\QueryPluginBase $query) {
  if ($view->id() == 'news_landing') {
    // Prepare a placeholder from exposed form.
    $placeholders = [':input_year' => $view->exposed_raw_input["year"]];

    // Add a tableAlias (which is not added automatically) and prepare a formula for condition.
    $view->argument["created_year"]->tableAlias = 'node_field_data';
    $formula_year = $view->argument["created_year"]->getDateFormat('Y') . ' = :input_year';

    // Add condition to query.
    $query->addWhere(0, $formula_year, $placeholders, 'formula');
  }
}
