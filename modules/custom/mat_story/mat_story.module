<?php

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\views\ViewExecutable;
use Drupal\node\Entity\Node;

/**
 * Implements hook_theme().
 */
function mat_story_theme($existing, $type, $theme, $path) {
  return [
    'story_submitted' => [
      'variables' => ['content' => NULL],
    ],
  ];
}

function mat_story_node_presave(Drupal\Core\Entity\EntityInterface $entity) {
  $logged_in = \Drupal::currentUser()->isAuthenticated();
  if ($entity->bundle() == 'story_profile' && $logged_in === false) {
    $entity->set('status', 0);
    $entity->set('field_user_submitted', 1);
  }
}

function mat_story_node_insert(Drupal\Core\Entity\EntityInterface $entity) {
  $logged_in = \Drupal::currentUser()->isAuthenticated();
  if ($entity->bundle() == 'story_profile' && $logged_in === false) {

    $nid = $entity->id();
    $host = \Drupal::request()->getSchemeAndHttpHost();
    $admin_edit_link = $host.'/node/'.$nid.'/edit';
    
    // get config values from admin/config/mat_story/config
    $config = \Drupal::config('mat_story.settings');
    $settings = array(
      'email'           => $config->get('mat_story')['email'],
      'user_title'      => $config->get('mat_story')['user_title'],
      'user_content'    => $config->get('mat_story')['user_content']
    );

    $user_email         = $entity->get('field_submissioner_email')->getString();
    $user_first_name    = $entity->get('field_submissioner_first_name')->getString();
    $user_last_name     = $entity->get('field_submissioner_last_name')->getString();
    $to_admin           = $settings['email'];

    // send mail to user
    $params['subject']        = $settings['user_title'];
    $params['user_content']   = $settings['user_content']['value'];
    
    Drupal::service('plugin.manager.mail')->mail(
      'mat_story',
      'mail_user',
      $user_email,
      \Drupal::languageManager()->getDefaultLanguage(),
      $params,
      $currentuserMail,
      TRUE
    );

    // send mail to admin
    $params['admin_subject'] = 'New story submission from: '.$user_first_name.' '.$user_last_name;
    $params['admin_content'] = 'Click this url for review: ';
    $params['admin_edit_link'] = $admin_edit_link;
    Drupal::service('plugin.manager.mail')->mail(
      'mat_story',
      'mail_admin',
      $to_admin,
      \Drupal::languageManager()->getDefaultLanguage(),
      $params,
      $currentuserMail,
      TRUE
    );

    // redirect
    $routeName = 'entity.node.canonical';
    $response = new RedirectResponse('/stories/story-submitted');
    $response->send();
    
  }
}

// send email to user
function mat_story_mail($key, &$message, $params) {
  switch($key) {
    // send email to user
    case 'mail_user':
      $message['subject']       = $params['subject'];
      $message['user_content']  = $params['user_content'];
      
      $body_data = array (
        '#theme' => 'mail_user',
        '#submitted_data' => $params['message']
      );
      //$message['body'][] = check_markup(nl2br($params['body']), 'full_html');
      $message['body'][] = \Drupal::service('renderer')->render($body_data);
    break;

    // send email to admin
    
    case 'mail_admin':
      $message['subject']           = $params['admin_subject'];
      $message['admin_content']     = $params['admin_content'];
      $message['admin_edit_link']   = $params['admin_edit_link'];
      
      $body_data = array (
        '#theme' => 'mail_admin',
        '#submitted_data' => $params['message']
      );
      $message['body'][] = \Drupal::service('renderer')->render($body_data);
    break;
  }
}


function mat_story_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $logged_in = \Drupal::currentUser()->isAuthenticated();

  $current_user = \Drupal::currentUser();
  $roles = $current_user->getRoles();
  
  if (in_array('authenticated', $roles) && in_array('editor', $roles)) {
    $form['field_submissioner_first_name']['#attributes']['class'][] = 'hidden';
    $form['field_submissioner_last_name']['#attributes']['class'][] = 'hidden';
    $form['field_submissioner_email']['#attributes']['class'][] = 'hidden';
    $form['field_submissioner_phone_number']['#attributes']['class'][] = 'hidden';
  }  
  
  // for ct form display
  if ($form['#id'] == 'node-story-profile-story-submission-form') {
    
    $form['#attached']['library'][] = 'mat_story/storyprofile';
    $form['field_terms_and_conditions']['widget']['value']['#title'] = t('I agree to the <a href="/terms-and-conditions">Terms and Conditions</a>.');
    //$form['actions']['submit']['#value'] = t('Submit Your Story');
    $form['body']['widget'][0]['#title'] = '';
    $form['title']['#attributes']['class'][] = 'hidden';
    
    if ($logged_in === false) {

      // step 1 wrappers
      $form['field_story_markup_1']['#prefix'] = '<a href="#step1" class="step-link"><span>'.t('Step 1').'</span></a><div class="step-content step1-content">';
      $form['field_story_category']['#suffix'] = '</div>';

      // step 2 wrappers
      $form['field_story_markup_2']['#prefix'] = '<a href="#step2" class="step-link"><span>'.t('Step 2').'</span></a><div class="step-content step2-content">';
      $form['body']['#suffix'] = '</div>';

      // step 3 wrappers
      $form['field_story_markup_23']['#prefix'] = '<a href="#step3" class="step-link"><span>'.t('Step 3').'</span></a><div class="step-content step3-content">';
      $form['field_story_image_3']['#suffix'] = '</div>';

      // step 4 wrappers
      $form['field_story_markup_4']['#prefix'] = '<a href="#step4" class="step-link"><span>'.t('Step 4').'</span></a><div class="step-content step4-content">';
      $form['field_submissioner_phone_number']['#suffix'] = '</div>';

      // step 5 wrappers
      $form['field_story_markup_5']['#prefix'] = '<a href="#step5" class="step-link"><span>'.t('Step 5').'</span></a><div class="step-content step5-content">';
      $form['field_terms_and_conditions']['#suffix'] = '</div>';

      // required fields
      $form['field_submissioner_first_name']['widget'][0]['value']['#required']     = true;
      $form['field_submissioner_last_name']['widget'][0]['value']['#required']      = true;
      $form['field_submissioner_phone_number']['widget'][0]['value']['#required']   = true;
      $form['field_submissioner_email']['widget'][0]['value']['#required']          = true;
      $form['field_story_category']['widget'][0]['value']['#required']              = true;

      $form['actions']['submit']['#type'] = 'inline_template';
      // do not change this (it's a bug, must have value="save")
      $form['actions']['submit']['#template'] = '<button data-drupal-selector="edit-submit" id="edit-submit" name="op" value="Save" class="button button--button js-form-submit form-submit" type="submit">'.t('Submit Your Story').'</button>';
      
      $form_state->setRedirect('form.submitted');
      
    }
  }
  // for web form
  if($form['#id'] == 'views-exposed-form-stories-landing-page-1') {
    $output = '<div class="stories-filter-left"><ul class="story-categories">';
    foreach ($form['field_story_category_target_id']['#options'] as $key => &$option) {
      if ($key == 'All') {
        $output .= '<li><a href="/stories?field_story_category_target_id='.$key.'">'.t('All Stories').'</a></li>';
      } else {
        $output .= '<li><a href="/stories?field_story_category_target_id='.$key.'">'.$option.'</a></li>';
      }
    }
    $output .= '</ul></div>';
    $form['#attributes']['class'] = 'hide';
    $form['#prefix'] = $output;
    $output2 = '<div class="stories-filter-right"><div class="a-z-filter"><p>'.t('Find a story by last name').'</p> <ul class="story-a-z">';
    foreach ($form['field_story_last_name_value']['#options'] as $key => &$option) {
      if ($key == 'All') {
        $output2 .= '<li class="all"><a href="/stories?field_story_last_name_value='.$key.'">A-Z</a></li>';
      } else {
        $output2 .= '<li><a href="/stories?field_story_last_name_value='.$key.'">'.$option.'</a></li>';
      }
    }
    $output2 .= '</ul></div></div>';

    $form['#suffix'] = $output2;

  }
}

/**
* Implements hook_views_pre_render().
*/
function mat_story_views_pre_render(ViewExecutable $view) {
  if (isset($view) && ($view->storage->id() == 'stories_landing')) {
    $view->element['#attached']['library'][] = 'mat_story/api';
  }
}

/**
 * Implements hook_page_attachments().
 */
function mat_story_page_attachments(array &$attachments) {
  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node instanceof Node) {
    $node = \Drupal::entityTypeManager()->getStorage('node')->load($node->id());
    $admin_context = \Drupal::service('router.admin_context');

    // Redirect all 'story_profile' CT > /stories which opens node in modal
    // We only redirect on a client side: node still has to be accessible.
    if ($node->getType() === 'story_profile' && !$admin_context->isAdminRoute()) {
      $js = "window.location = '/stories#{$node->id()}';";
      $attachments['#attached']['html_head'][] = [[
        '#tag' => 'script',
        '#value' => \Drupal\Core\Render\Markup::create($js),
        '#weight' => -1,
      ],
        'story-profile-redirect'
      ];
    }
  }

}

