// ========================================
//
// @file _mixins.scss
// File containing all Sass mixins
//
// ========================================

// - - Output property and value in rem with px fallback
@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

// - - Clearfix
@mixin clearfix {
  zoom: 1;

  &:before,
  &:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }

  &:after {
    clear: both;
  }
}

// - - Helper for backgorund image
@mixin image($image_name){
  // Set properties individually to allow for other background property additions.
  background-image: url($image-root + $image_name);
  background-repeat: no-repeat;
}


// - - Image for retina
@mixin image-2x ($image, $width, $height) {
  @media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

// - - Helper for svg icons
@mixin icons($icon_name){
  background-image: url($icon-root + $icon_name + '.svg');
  background-repeat: no-repeat;
}

// - - CSS calc function
@mixin calc ($property, $expression) {
  #{$property}: calc(#{$expression});
}

@mixin cta($bg: 'light') {
  position: relative;
  display: inline-flex;
  align-items: center;
  padding: 10px 20px;
  text-decoration: none;
  text-transform: uppercase;
  border: none;
  border-radius: 3px;
  transition: .2s all;
  font-weight: 700;
  color: $brand-primary;

  &:hover {
    color: $color-white;
    text-decoration: none;
    transition: .2s all;
  }

  @if $bg == 'light' {
    border: 1px solid $brand-primary;
    background: $color-white;

    &:after {
      content: "";
      display: block;
      margin-left: 5px;
      width: 5px;
      height: 10px;
      @include image('chevron.svg');
      background-position: right center;
      background-size: contain;
    }

    &:hover {
      border: 1px solid $brand-primary-alt;
      color: $brand-primary;
    }
  }

  @if $bg == 'dark' {
    color: $color-white;
    background: $brand-primary;

    &:hover {
      background: $brand-secondary;
    }
  }
}

@mixin overlay($color, $opacity: 0.9) {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: $color;
  filter: opacity($opacity);
  z-index: 1;
}

// - - Gradient background
@mixin gradient($deg, $bg, $gradient-bg-start, $gradient-bg-end) {
  background: $bg;
  background: -webkit-linear-gradient($deg, $gradient-bg-start, $gradient-bg-end);
  background: -o-linear-gradient($deg, $gradient-bg-start, $gradient-bg-end);
  background: -moz-linear-gradient($deg, $gradient-bg-start, $gradient-bg-end);
  background: linear-gradient($deg, $gradient-bg-start, $gradient-bg-end);
}

// - - Gradient background - Colors
@mixin gradient-green() {
  @include gradient(90deg, $green, $green-light, $green);
}

@mixin gradient-orange() {
  @include gradient(90deg, $orange, $orange-light, $orange);
}

@mixin gradient-purple() {
  @include gradient(90deg, $purple, $purple-light, $purple);
}

@mixin gradient-blue-dark() {
  @include gradient(90deg, $blue-darkest, $blue-darker, $blue-darkest);
}

@mixin gradient-blue($deg: 90deg) {
  @include gradient($deg, $blue-darker, $blue-light, $blue-darker);
}

@mixin gradient-blue-light() {
  @include gradient(90deg, $blue-light, $blue-lighteset, $blue-light);
}

// - - Buttons
@mixin btn() {
  display: inline-block;
  font-weight: normal;
  color: $white;
  text-decoration: none;
  text-align: center;
  outline: none;
}

@mixin btn-primary($bg: 'light') {
  @include btn();
  padding: 1.5rem 6.2rem;
  border-radius: $border-radius-large;
  font-weight: 500;
  @include font-size(2);
  line-height: 1.7;

  @media (max-width: $screen-xs-max) {
    padding: 1.5rem 5.2rem;
  }

  @if $bg == 'light' {
    background-color: $brand-primary;
  }

  @if $bg == 'dark' {
    background-color: $blue-dark;
  }
}

@mixin btn-secondary() {
  @include btn();
  padding: .4rem 2.2rem;
  @include font-size(1.4);
  border: 2px solid $white;
  border-radius: 30px;
}

// - - Placeholder
@mixin placeholder($color) {
  // Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }
  &:-ms-input-placeholder { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder { color: $color; } // Safari and Chrome
}

